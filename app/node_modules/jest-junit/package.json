{
  "_args": [
    [
      {
        "raw": "jest-junit@^3.0.0",
        "scope": null,
        "escapedName": "jest-junit",
        "name": "jest-junit",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "/home/alan/devel/terraform/bootstrap/helloworld-npm/app"
    ]
  ],
  "_from": "jest-junit@>=3.0.0 <4.0.0",
  "_id": "jest-junit@3.1.0",
  "_inCache": true,
  "_location": "/jest-junit",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/jest-junit-3.1.0.tgz_1506697155113_0.39851232385262847"
  },
  "_npmUser": {
    "name": "jsonp",
    "email": "jason@jason-palmer.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jest-junit@^3.0.0",
    "scope": null,
    "escapedName": "jest-junit",
    "name": "jest-junit",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/jest-junit/-/jest-junit-3.1.0.tgz",
  "_shasum": "3bd0b7a8bfd5b91f86376d44ff0f4c7f136f4287",
  "_shrinkwrap": null,
  "_spec": "jest-junit@^3.0.0",
  "_where": "/home/alan/devel/terraform/bootstrap/helloworld-npm/app",
  "author": {
    "name": "Jason Palmer"
  },
  "bugs": {
    "url": "https://github.com/palmerj3/jest-junit/issues"
  },
  "dependencies": {
    "mkdirp": "^0.5.1",
    "strip-ansi": "^4.0.0",
    "xml": "^1.0.1"
  },
  "description": "A jest result processor that generates junit xml files",
  "devDependencies": {
    "jest": "20.0.4",
    "libxmljs": "^0.18.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-unYnfi6nq5oa4+sBck049fwCNNS5uJtTUwqfITIE343FO5QjZS25ZMUzibatZ9uGNzB1nH39bRWatLYI3na+3A==",
    "shasum": "3bd0b7a8bfd5b91f86376d44ff0f4c7f136f4287",
    "tarball": "https://registry.npmjs.org/jest-junit/-/jest-junit-3.1.0.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "files": [
    "index.js",
    "utils",
    "constants"
  ],
  "gitHead": "f5f954969f607380a1e73112e6e72d21c20466ab",
  "homepage": "https://github.com/palmerj3/jest-junit#readme",
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jsonp",
      "email": "jason@jason-palmer.com"
    }
  ],
  "name": "jest-junit",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/palmerj3/jest-junit.svg?branch=master)](https://travis-ci.org/palmerj3/jest-junit)\n\n# jest-junit\nA Jest reporter that creates compatible junit xml files\n\n## Installation\n```shell\nyarn add --dev jest-junit\n```\n\n## Usage\nIn your jest config add the following entry:\n```JSON\n{\n  \"testResultsProcessor\": \"jest-junit\"\n}\n```\n\nThen simply run:\n\n```shell\njest\n```\n\nFor your Continuous Integration you can simply do:\n```shell\njest --ci --testResultsProcessor=\"jest-junit\"\n```\n\n## Configuration\n\n`jest-junit` offers five configurations based on environment variables or a `jest-junit` key defined in `package.json`. All configuration values should be **strings**.\n\n| Variable Name | Description | Default |\n|--|--|--|\n| `JEST_SUITE_NAME` | `name` attribute of `<testsuites>` | `\"jest tests\"` |\n| `JEST_JUNIT_OUTPUT` | File path to save the output. | `\"./junit.xml\"` |\n| `JEST_JUNIT_CLASSNAME` | Template string for the `classname` attribute of `<testcase>`. | `\"{classname} {title}\"` |\n| `JEST_JUNIT_TITLE` | Template string for the `name` attribute of `<testcase>`. | `\"{classname} {title}\"` |\n| `JEST_JUNIT_ANCESTOR_SEPARATOR` | Character(s) used to join the `describe` blocks. | `\" \"` |\n| `JEST_USE_PATH_FOR_SUITE_NAME` | Use file path as the `name` attribute of `<testsuite>` | `\"false\"` |\n\nExample:\n\n```shell\nJEST_SUITE_NAME=\"Jest JUnit Unit Tests\" JEST_JUNIT_OUTPUT=\"./artifacts/junit.xml\" jest\n```\n\nYou can also define a `jest-junit` key in your `package.json`.  All are **string** values.\n\n```\n{\n  ...\n  \"jest-junit\": {\n    \"suiteName\": \"jest tests\",\n    \"output\": \"./junit.xml\",\n    \"classNameTemplate\": \"{classname}-{title}\",\n    \"titleTemplate\": \"{classname}-{title}\",\n    \"ancestorSeparator\": \" › \",\n    \"usePathForSuiteName\": \"true\"\n  }\n}\n```\n\nFor the following test:\n\n```js\ndescribe('addition', () => {\n  describe('positive numbers', () => {\n    it('should add up', () => {\n      expect(1 + 2).toBe(3);\n    });\n  });\n});\n```\n\nThe default output:\n\n```xml\n<testsuites name=\"jest tests\">\n  <testsuite name=\"addition\" tests=\"1\" errors=\"0\" failures=\"0\" skipped=\"0\" timestamp=\"2017-07-13T09:42:28\" time=\"0.161\">\n    <testcase classname=\"addition positive numbers should add up\" name=\"addition positive numbers should add up\" time=\"0.004\">\n    </testcase>\n  </testsuite>\n</testsuites>\n```\n\nChanging the `classNameTemplate` and `titleTemplate`:\n\n```shell\nJEST_JUNIT_CLASSNAME=\"{classname}\" JEST_JUNIT_TITLE=\"{title}\" jest\n```\n\n```xml\n<testsuites name=\"jest tests\">\n  <testsuite name=\"addition\" tests=\"1\" errors=\"0\" failures=\"0\" skipped=\"0\" timestamp=\"2017-07-13T09:45:42\" time=\"0.154\">\n    <testcase classname=\"addition positive numbers\" name=\"should add up\" time=\"0.005\">\n    </testcase>\n  </testsuite>\n</testsuites>\n```\n\nChanging just the `ancestorSeparator`:\n\n```shell\nJEST_JUNIT_ANCESTOR_SEPARATOR=\" › \" jest\n```\n\n```xml\n<testsuites name=\"jest tests\">\n  <testsuite name=\"addition\" tests=\"1\" errors=\"0\" failures=\"0\" skipped=\"0\" timestamp=\"2017-07-13T09:47:12\" time=\"0.162\">\n    <testcase classname=\"addition › positive numbers should add up\" name=\"addition › positive numbers should add up\" time=\"0.004\">\n    </testcase>\n  </testsuite>\n</testsuites>\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/palmerj3/jest-junit.git"
  },
  "scripts": {
    "test": "jest"
  },
  "version": "3.1.0"
}
